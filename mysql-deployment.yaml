# Define a 'Persistent Voulume Claim'(PVC) for Mysql Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim # name of PVC essential for identifying the storage data
  labels:
    app: mysql
    tier: database
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi    #This will tell kubernetes about the amount of space we are trying to claim.
---
#deployement of mysql
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
       app: mysql
  template:
    metadata: 
       labels:
         app: mysql
         tier: database
    spec: 
      containers:
      - image: mysql:8.0.31
        name: mysql
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
               name: mysql-secret
               key: mysql-password
        - name: MYSQL_DATABASE
          value: "organizationdb"
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts: 
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim

---
#Define services to expose mysql to other services
apiVersion: v1
kind: Service
metadata:
   name: mysql
   labels:
      app: mysql
      tier: database
spec:
  ports: 
   - port: 3306
     targetPort: 3306
  selector:
    app: mysql
    tier: database
  clusterIP: None
